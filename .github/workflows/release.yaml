name: Release

on:
  push:
    branches:
      - main     # Also runs on commits pushed to main branch
    tags:
      - 'v*.*.*'  # Also trigger on version tags like v1.0.0, etc.

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [1.20]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Check Go version (debug)
        run: go version

      - name: Show environment variables (debug)
        run: env

      - name: Show current directory and contents (debug)
        run: |
          pwd
          ls -la
          ls -la ./cmd

      - name: Download Go modules
        run: go mod download

      - name: Build binary
        run: |
          echo "Matrix OS: ${{ matrix.os }}"
          OUTPUT_NAME=gores
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            OUTPUT_NAME=gores.exe
          fi
          GOOS=$(echo ${{ matrix.os }} | cut -d'-' -f1)
          GOARCH=amd64
          echo "Building for GOOS=$GOOS GOARCH=$GOARCH OUTPUT_NAME=$OUTPUT_NAME"
          env GOOS=$GOOS GOARCH=$GOARCH go build -o $OUTPUT_NAME ./cmd

      - name: List built files (debug)
        run: ls -la

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-binary
          path: |
            gores
            gores.exe

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build-and-release
    runs-on: ubuntu-latest

    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: ubuntu-latest-binary
          path: release

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-latest-binary
          path: release

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-latest-binary
          path: release

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: Automated release for ${{ github.ref_name }}.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux binary
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: gores-linux-amd64
          asset_path: release/gores
          asset_name: gores-linux-amd64
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload macOS binary
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: gores-darwin-amd64
          asset_path: release/gores
          asset_name: gores-darwin-amd64
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows binary
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: gores-windows-amd64.exe
          asset_path: release/gores.exe
          asset_name: gores-windows-amd64.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}